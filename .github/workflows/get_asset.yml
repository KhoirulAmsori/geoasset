name: Download GEO Asset
on:
  schedule:
    - cron: "0 16 */3 * *"
  workflow_dispatch:
  repository_dispatch:

permissions:
  contents: write

jobs:
  Download:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        run: |
          export TZ="Asia/Jakarta"
          sudo locale-gen id_ID.UTF-8
          echo "BUILDTIME=$(LC_TIME=id_ID.UTF-8 date '%a, %d/%m/%Y - %H:%M:%S')" >> $GITHUB_ENV

      - name: Checkout main branch
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          ref: main
          path: source

      - name: Download Maxmind asset
        env:
          LICENSE_KEY: ${{ secrets.MAXMIND_GEOLITE2_LICENSE }}
        run: |
          cd source
          mkdir -p geo_output
          curl -L "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&license_key=${LICENSE_KEY}&suffix=tar.gz" -o geo_output/GeoLite2-ASN.tar.gz
          curl -L "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN-CSV&license_key=${LICENSE_KEY}&suffix=zip" -o geo_output/GeoLite2-ASN-CSV.zip
          curl -L "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=${LICENSE_KEY}&suffix=tar.gz" -o geo_output/GeoLite2-Country.tar.gz
          curl -L "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country-CSV&license_key=${LICENSE_KEY}&suffix=zip" -o geo_output/GeoLite2-Country-CSV.zip
          
          cd ..

      - name: Prepare local repo for 'asset' branch (create if missing)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          rm -rf asset
          mkdir -p asset
          cd asset
          git init
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote add origin "https://${{ github.actor }}:${GH_TOKEN}@github.com/${{ github.repository }}"
          if git ls-remote --exit-code --heads origin asset; then
            git fetch origin asset
            git checkout -b asset origin/asset
          else
            git checkout --orphan asset
          fi
          cd ..

      - name: Copy downloaded asset  to asset/GEO
        run: |
          mkdir -p asset/GEO
          cp -r source/geo_output/* asset/GEO/

      - name: Commit & push
        run: |
          cd asset
          git add GEO
          git commit -m "Update GEO on ${{ env.BUILDTIME }}" || echo "No changes to commit"
          git push -u origin asset
