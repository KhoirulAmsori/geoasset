name: Build GEO Asset
on:
  schedule:
    - cron: "0 17 * * *"
  workflow_dispatch:
  repository_dispatch:

permissions:
  contents: write

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Setup environment & download asset
        run: |
          export TZ="Asia/Jakarta"
          sudo locale-gen id_ID.UTF-8
          echo "BUILDTIME=$(LC_TIME=id_ID.UTF-8 date '+%A, %d %B %Y - %H:%M:%S')" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +'%d%m%Y-%H%M')" >> $GITHUB_ENV
          echo "OISD_SMALL=https://small.oisd.nl/dnsmasq" >> $GITHUB_ENV
          echo "OISD_NSFW=https://nsfw.oisd.nl/dnsmasq" >> $GITHUB_ENV
          echo "OISD_NSFW_SMALL=https://nsfw-small.oisd.nl/dnsmasq" >> $GITHUB_ENV
          
          # Folder untuk penerbitan
          mkdir -p Publish
          
          # Kloning repo ke geoip-build/asset
          git clone --depth 1 -b asset https://github.com/${{ github.repository }} geoip-build/asset

      - name: Prepare Go cache folder
        run: mkdir -p /tmp/go-build/pkg/mod

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"   # versi Go seragam
          cache-dependency-path: |
            ./geoip-build/go.sum
            ./geosite-build/go.sum
        env:
          GOPATH: /tmp/go-build

      - name: Build GEOIP
        run: |
          cd geoip-build/asset/GEO
          
          # Ekstrak semua aset
          for file in *.{tar.gz,zip}; do
            [[ $file == *.tar.gz ]] && tar -xvzf "$file"
            [[ $file == *.zip ]] && unzip "$file"
          done
          
          cd ../../
          mkdir -p geolite2
          
          # Pindahkah aset terunduh ke geolite2
          cp asset/GEO/GeoLite2-Country_*/*.mmdb geolite2/
          cp asset/GEO/GeoLite2-ASN_*/*.mmdb geolite2/
          cp asset/GEO/GeoLite2-ASN-CSV_*/*.csv geolite2/
          cp asset/GEO/GeoLite2-Country-CSV_*/*.csv geolite2/
          cp asset/GEO/GeoLite2-Country-CSV_*/{GeoLite2-Country-Blocks-IPv4*,GeoLite2-Country-Locations-en}.csv geolite2/
          
          # Salin aset untuk diterbitkan
          cp geolite2/GeoLite2-ASN.mmdb ../Publish/GeoLite2-ASN.mmdb
          
          # Jalankan pembangunan
          go mod tidy
          go build ./
          ./geoip convert -c ./config.json

      - name: Build GEOSITE
        run: |
          # Kloning ke domain-list-community
          git clone --depth 1 https://github.com/v2fly/domain-list-community
          
          cd geosite-build
          
          # Pengecualian domain di oisd-small dan oisd-nsfw-small 
          curl -sSL $OISD_SMALL | perl -ne 'if(/^server=\/([^\/]+)\//){$d=$1;if($d!~/^(googlesyndication\.com|pagead2\.googlesyndication\.com|gambar123\.com)$/){print "$d\n"}}' > ../domain-list-community/data/oisd-small

          exclude=$(paste -sd'|' exclude_list.txt)
          curl -sSL $OISD_NSFW_SMALL | perl -ne '/^server=\/([^\/]+)\// && print "$1\n"' | grep -vE "$exclude" > ../domain-list-community/data/oisd-nsfw-small
          cp raven_nsfw ../domain-list-community/data/raven_nsfw

          # Jalankan pembangunan
          go mod tidy
          go run ./ --datapath=../domain-list-community/data

      - name: Build Sing-Box assets
        run: |
          # Kloning meta-rules-converter
          git clone --depth 1 https://github.com/MetaCubeX/meta-rules-converter

          # Folder untuk branch sing-box
          mkdir -p sing-rule/geo/{geosite,geoip} sing-rule/asn

          # Unduh dan konversi RSC ke JSON
          curl -s -o nice.rsc http://ixp.mikrotik.co.id/download/nice.rsc
          grep -oP 'address="\K[0-9./]+' nice.rsc | grep '/' | \
          awk '
          BEGIN {
            print "{\n  \"version\": 4,\n  \"rules\": [\n    {\n      \"ip_cidr\": ["
          }
          {
            ips[NR] = $0
          }
          END {
               for (i=1; i<=NR; i++) {
               printf "        \"%s\"", ips[i]
               if (i<NR) { printf "," }
               printf "\n"
              }
              print "      ]\n    }\n  ]\n}"
          }' > ./sing-rule/geo/geosite/nice.json

          # Pasang binari sing-box dan konversi
          curl -fsSL https://sing-box.app/install.sh | sh -s -- --beta
          sing-box rule-set compile --output ./sing-rule/geo/geosite/nice.srs ./sing-rule/geo/geosite/nice.json
          
          # Jalankan pembangunan geo dan asn
          cd meta-rules-converter
          go run ./ geosite -f ../Publish/GeoSite.dat -o ../sing-rule/geo/geosite -t sing-box
          go run ./ geoip -f ../Publish/GeoIP.dat -o ../sing-rule/geo/geoip -t sing-box
          
          cp ../geoip-build/geolite2/GeoLite2-ASN.mmdb .
          go run ./ asn -o ../sing-rule/asn -t sing-box

      - name: Push sing-box branch
        run: |
          cd sing-rule
          
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b sing-box
          git add .
          git commit -m "Released on ${{ env.BUILDTIME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin sing-box

      - name: Upload release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_name: ${{ env.BUILDTIME }}
          tag: latest
          file_glob: true
          overwrite: true
          file: Publish/*
          body: |
            ## Build Date: ${{ env.BUILDTIME }} ##
