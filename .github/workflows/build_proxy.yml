name: Build Proxy List

on:
  schedule:
    - cron: "0 */6 * * *"
#  push:
#    branches:
#    - dev
  workflow_dispatch:
    inputs:
      debug:
        description: "Enable Debuging?"
        required: false
        default: "false"
        type: boolean
  repository_dispatch:

permissions:
  contents: write

jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      MaxProxiesPerCountry: 3
      MinActiveProxies: 100
      MaxThreadCount: 32
      EnableDebug: ${{ github.event.inputs.debug || 'false' }}
      LitePath: Asset/lite
      LiteConfigPath: Asset/config.json
      IncludedProtocols: "ss,trojan,vmess,vless"
      IncludedCountry: "HK,GB,IN,JP,MY,NL,SG,TW,VE,VN"
      SourcesFile: Asset/sources.txt
      GeoLiteCountryDbPath: Asset/GeoLite2-Country.mmdb
      GeoLiteAsnDbPath: Asset/GeoLite2-ASN.mmdb

    steps:
      - name: Set variables
        run: |
          export TZ="Asia/Jakarta"
          sudo locale-gen id_ID.UTF-8
          echo "BUILDTIME=$(LC_TIME=id_ID.UTF-8 date '+%a, %d/%m/%Y - %H:%M:%S')" >> $GITHUB_ENV

      - uses: actions/checkout@v5
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Checkout main branch
        uses: actions/checkout@v5
        with:
          fetch-depth: 1
          ref: ${{ github.ref_name }}
          path: source

      - name: Build proxy list
        run: |
          cd source/proxy-build
          
          # get mmdb file
          git clone --depth 1 -b asset https://github.com/${{ github.repository }} GEO

          for file in GEO/GEO/*.tar.gz; do tar -xzf "$file" --wildcards --transform='s:.*/::' -C Asset '*.mmdb'; done

          dotnet restore
          dotnet run --configuration Release --project .

      - name: Build sing-box configuration
        run: |
          cd source/proxy-build/Asset
          pip install geoip2
          python generate_singbox_config.py
          
          cd ../..

      - name: Prepare local repo for 'asset' branch (create if missing)
        if: ${{ !hashFiles('source/proxy-build/skip_push.flag') }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          rm -rf asset
          mkdir -p asset
          cd asset
          git init
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote add origin "https://${{ github.actor }}:${GH_TOKEN}@github.com/${{ github.repository }}"
          if git ls-remote --exit-code --heads origin asset; then
            git fetch origin asset
            git checkout -b asset origin/asset
          else
            git checkout --orphan asset
          fi
          cd ..

      - name: Copy build results to asset/Proxy
        if: ${{ !hashFiles('source/proxy-build/skip_push.flag') }}
        run: |
          mkdir -p asset/Proxy
          cp source/proxy-build/Asset/raven.json asset/Proxy/
          cp source/proxy-build/{list.txt,all_list.txt} asset/Proxy/

      - name: Commit & push Proxy
        if: ${{ !hashFiles('source/proxy-build/skip_push.flag') }}
        run: |
          cd asset
          git add Proxy
          git commit -m "Update proxy list on ${{ env.BUILDTIME }}" || echo "No changes to commit"
          git push -u origin asset
